; .\candasm.SRC generated from: candasm.c
; COMPILER INVOKED BY:
;        C:\Keil\C51\BIN\C51.EXE candasm.c BROWSE DEBUG OBJECTEXTEND SRC(.\candasm.SRC)

$NOMOD51

NAME	CANDASM

P0	DATA	080H
P1	DATA	090H
P2	DATA	0A0H
P3	DATA	0B0H
AC	BIT	0D0H.6
T0	BIT	0B0H.4
T1	BIT	0B0H.5
EA	BIT	0A8H.7
IE	DATA	0A8H
P0_0	BIT	080H.0
P1_0	BIT	090H.0
P0_1	BIT	080H.1
FL	BIT	0D0H.1
P2_0	BIT	0A0H.0
P1_1	BIT	090H.1
P0_2	BIT	080H.2
P3_0	BIT	0B0H.0
P2_1	BIT	0A0H.1
P1_2	BIT	090H.2
P0_3	BIT	080H.3
P3_1	BIT	0B0H.1
P2_2	BIT	0A0H.2
P1_3	BIT	090H.3
P0_4	BIT	080H.4
P3_2	BIT	0B0H.2
P2_3	BIT	0A0H.3
P1_4	BIT	090H.4
P0_5	BIT	080H.5
RD	BIT	0B0H.7
P3_3	BIT	0B0H.3
P2_4	BIT	0A0H.4
P1_5	BIT	090H.5
P0_6	BIT	080H.6
P3_4	BIT	0B0H.4
P2_5	BIT	0A0H.5
P1_6	BIT	090H.6
P0_7	BIT	080H.7
P3_5	BIT	0B0H.5
ES	BIT	0A8H.4
P2_6	BIT	0A0H.6
P1_7	BIT	090H.7
P3_6	BIT	0B0H.6
P2_7	BIT	0A0H.7
IP	DATA	0B8H
P3_7	BIT	0B0H.7
RI	BIT	098H.0
CY	BIT	0D0H.7
INT0	BIT	0B0H.2
INT1	BIT	0B0H.3
TI	BIT	098H.1
PS	BIT	0B8H.4
SP	DATA	081H
OV	BIT	0D0H.2
WR	BIT	0B0H.6
SBUF	DATA	099H
PCON	DATA	087H
SCON	DATA	098H
TMOD	DATA	089H
TCON	DATA	088H
IE0	BIT	088H.1
IE1	BIT	088H.3
B	DATA	0F0H
ACC	DATA	0E0H
ET0	BIT	0A8H.1
ET1	BIT	0A8H.3
TF0	BIT	088H.5
ET2	BIT	0A8H.5
TF1	BIT	088H.7
RB8	BIT	098H.2
TH0	DATA	08CH
EX0	BIT	0A8H.0
IT0	BIT	088H.0
TH1	DATA	08DH
EX1	BIT	0A8H.2
TB8	BIT	098H.3
IT1	BIT	088H.2
P	BIT	0D0H.0
SM0	BIT	098H.7
TL0	DATA	08AH
SM1	BIT	098H.6
TL1	DATA	08BH
SM2	BIT	098H.5
PT0	BIT	0B8H.1
RS0	BIT	0D0H.3
PT1	BIT	0B8H.3
RS1	BIT	0D0H.4
PT2	BIT	0B8H.5
TR0	BIT	088H.4
TR1	BIT	088H.6
PX0	BIT	0B8H.0
PX1	BIT	0B8H.2
DPH	DATA	083H
DPL	DATA	082H
REN	BIT	098H.4
RXD	BIT	0B0H.0
TXD	BIT	0B0H.1
F0	BIT	0D0H.5
PSW	DATA	0D0H
?PR?delay?CANDASM    SEGMENT CODE 
?PR?main?CANDASM     SEGMENT CODE 
	EXTRN	CODE (?C_STARTUP)
	PUBLIC	main
	PUBLIC	delay
; 		   #include <AT89X51.H>
;    void delay (void)

	RSEG  ?PR?delay?CANDASM
delay:
			; SOURCE LINE # 2
;       {  
			; SOURCE LINE # 3
; 	  #pragma asm
; 	   mov r3,#5
	  mov r3,#5
; dl2:   mov r4,#255
	  dl2:   mov r4,#255
; dl1:   mov r5,#255
	  dl1:   mov r5,#255
; 	   djnz r5,$
	  djnz r5,$
; 	   djnz r4,dl1
	  djnz r4,dl1
; 	   djnz r3,dl2
	  djnz r3,dl2
; 	  #pragma endasm 
; 	   }
			; SOURCE LINE # 12
	RET  	
; END OF delay

;    void main (void)

	RSEG  ?PR?main?CANDASM
main:
	USING	0
			; SOURCE LINE # 13
;        {  unsigned char j=0x7f;
			; SOURCE LINE # 14
;---- Variable 'j?140' assigned to Register 'R7' ----
	MOV  	R7,#07FH
?C0002:
; 	       while(1)
			; SOURCE LINE # 15
; 		   {j=(j>>1)|0x80;
			; SOURCE LINE # 16
	MOV  	A,R7
	CLR  	C
	RRC  	A
	ORL  	A,#080H
	MOV  	R7,A
; 		   if(j==0xff)
			; SOURCE LINE # 17
	CJNE 	R7,#0FFH,?C0004
; 		   j=0x7f;
			; SOURCE LINE # 18
	MOV  	R7,#07FH
?C0004:
; 		   P1=j;
			; SOURCE LINE # 19
	MOV  	P1,R7
; 		   delay();
			; SOURCE LINE # 20
	LCALL	delay
; 		   }
			; SOURCE LINE # 21
	SJMP 	?C0002
; END OF main

	END
